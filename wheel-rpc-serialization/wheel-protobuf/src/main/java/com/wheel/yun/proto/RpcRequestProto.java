// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RpcRequest.proto

package com.wheel.yun.proto;

import java.util.concurrent.atomic.AtomicLong;

public final class RpcRequestProto {
  private RpcRequestProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RpcRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RpcRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <code>.RpcInvocation rpc_invocation = 2;</code>
     * @return Whether the rpcInvocation field is set.
     */
    boolean hasRpcInvocation();
    /**
     * <code>.RpcInvocation rpc_invocation = 2;</code>
     * @return The rpcInvocation.
     */
    RpcInvocation getRpcInvocation();
    /**
     * <code>.RpcInvocation rpc_invocation = 2;</code>
     */
    RpcInvocationOrBuilder getRpcInvocationOrBuilder();

    /**
     * <code>bool is_event = 3;</code>
     * @return The isEvent.
     */
    boolean getIsEvent();
  }
  /**
   * Protobuf type {@code RpcRequest}
   */
  public static final class RpcRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RpcRequest)
      RpcRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RpcRequest.newBuilder() to construct.
    private RpcRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RpcRequest() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RpcRequest();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RpcRequestProto.internal_static_RpcRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RpcRequestProto.internal_static_RpcRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RpcRequest.class, Builder.class);
    }

    private static AtomicLong idGenerator = new AtomicLong();
    public static final int ID_FIELD_NUMBER = 1;
    private long id_ = idGenerator.incrementAndGet();
    /**
     * <code>int64 id = 1;</code>
     * @return The id.
     */
    @Override
    public long getId() {
      return id_;
    }

    public static final int RPC_INVOCATION_FIELD_NUMBER = 2;
    private RpcInvocation rpcInvocation_;
    /**
     * <code>.RpcInvocation rpc_invocation = 2;</code>
     * @return Whether the rpcInvocation field is set.
     */
    @Override
    public boolean hasRpcInvocation() {
      return rpcInvocation_ != null;
    }
    /**
     * <code>.RpcInvocation rpc_invocation = 2;</code>
     * @return The rpcInvocation.
     */
    @Override
    public RpcInvocation getRpcInvocation() {
      return rpcInvocation_ == null ? RpcInvocation.getDefaultInstance() : rpcInvocation_;
    }
    /**
     * <code>.RpcInvocation rpc_invocation = 2;</code>
     */
    @Override
    public RpcInvocationOrBuilder getRpcInvocationOrBuilder() {
      return rpcInvocation_ == null ? RpcInvocation.getDefaultInstance() : rpcInvocation_;
    }

    public static final int IS_EVENT_FIELD_NUMBER = 3;
    private boolean isEvent_ = false;
    /**
     * <code>bool is_event = 3;</code>
     * @return The isEvent.
     */
    @Override
    public boolean getIsEvent() {
      return isEvent_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (rpcInvocation_ != null) {
        output.writeMessage(2, getRpcInvocation());
      }
      if (isEvent_ != false) {
        output.writeBool(3, isEvent_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (rpcInvocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRpcInvocation());
      }
      if (isEvent_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isEvent_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RpcRequest)) {
        return super.equals(obj);
      }
      RpcRequest other = (RpcRequest) obj;

      if (getId()
          != other.getId()) return false;
      if (hasRpcInvocation() != other.hasRpcInvocation()) return false;
      if (hasRpcInvocation()) {
        if (!getRpcInvocation()
            .equals(other.getRpcInvocation())) return false;
      }
      if (getIsEvent()
          != other.getIsEvent()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      if (hasRpcInvocation()) {
        hash = (37 * hash) + RPC_INVOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getRpcInvocation().hashCode();
      }
      hash = (37 * hash) + IS_EVENT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsEvent());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RpcRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RpcRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RpcRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RpcRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RpcRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RpcRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RpcRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RpcRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RpcRequest)
        RpcRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RpcRequestProto.internal_static_RpcRequest_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RpcRequestProto.internal_static_RpcRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RpcRequest.class, Builder.class);
      }

      // Construct using com.wheel.yun.proto.RpcRequestProto.RpcRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0L;
        rpcInvocation_ = null;
        if (rpcInvocationBuilder_ != null) {
          rpcInvocationBuilder_.dispose();
          rpcInvocationBuilder_ = null;
        }
        isEvent_ = false;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RpcRequestProto.internal_static_RpcRequest_descriptor;
      }

      @Override
      public RpcRequest getDefaultInstanceForType() {
        return RpcRequest.getDefaultInstance();
      }

      @Override
      public RpcRequest build() {
        RpcRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RpcRequest buildPartial() {
        RpcRequest result = new RpcRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(RpcRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.rpcInvocation_ = rpcInvocationBuilder_ == null
              ? rpcInvocation_
              : rpcInvocationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.isEvent_ = isEvent_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RpcRequest) {
          return mergeFrom((RpcRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RpcRequest other) {
        if (other == RpcRequest.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.hasRpcInvocation()) {
          mergeRpcInvocation(other.getRpcInvocation());
        }
        if (other.getIsEvent() != false) {
          setIsEvent(other.getIsEvent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getRpcInvocationFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                isEvent_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>int64 id = 1;</code>
       * @return The id.
       */
      @Override
      public long getId() {
        return id_;
      }
      /**
       * <code>int64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private RpcInvocation rpcInvocation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          RpcInvocation, RpcInvocation.Builder, RpcInvocationOrBuilder> rpcInvocationBuilder_;
      /**
       * <code>.RpcInvocation rpc_invocation = 2;</code>
       * @return Whether the rpcInvocation field is set.
       */
      public boolean hasRpcInvocation() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.RpcInvocation rpc_invocation = 2;</code>
       * @return The rpcInvocation.
       */
      public RpcInvocation getRpcInvocation() {
        if (rpcInvocationBuilder_ == null) {
          return rpcInvocation_ == null ? RpcInvocation.getDefaultInstance() : rpcInvocation_;
        } else {
          return rpcInvocationBuilder_.getMessage();
        }
      }
      /**
       * <code>.RpcInvocation rpc_invocation = 2;</code>
       */
      public Builder setRpcInvocation(RpcInvocation value) {
        if (rpcInvocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rpcInvocation_ = value;
        } else {
          rpcInvocationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.RpcInvocation rpc_invocation = 2;</code>
       */
      public Builder setRpcInvocation(
          RpcInvocation.Builder builderForValue) {
        if (rpcInvocationBuilder_ == null) {
          rpcInvocation_ = builderForValue.build();
        } else {
          rpcInvocationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.RpcInvocation rpc_invocation = 2;</code>
       */
      public Builder mergeRpcInvocation(RpcInvocation value) {
        if (rpcInvocationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            rpcInvocation_ != null &&
            rpcInvocation_ != RpcInvocation.getDefaultInstance()) {
            getRpcInvocationBuilder().mergeFrom(value);
          } else {
            rpcInvocation_ = value;
          }
        } else {
          rpcInvocationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.RpcInvocation rpc_invocation = 2;</code>
       */
      public Builder clearRpcInvocation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rpcInvocation_ = null;
        if (rpcInvocationBuilder_ != null) {
          rpcInvocationBuilder_.dispose();
          rpcInvocationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.RpcInvocation rpc_invocation = 2;</code>
       */
      public RpcInvocation.Builder getRpcInvocationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRpcInvocationFieldBuilder().getBuilder();
      }
      /**
       * <code>.RpcInvocation rpc_invocation = 2;</code>
       */
      public RpcInvocationOrBuilder getRpcInvocationOrBuilder() {
        if (rpcInvocationBuilder_ != null) {
          return rpcInvocationBuilder_.getMessageOrBuilder();
        } else {
          return rpcInvocation_ == null ?
              RpcInvocation.getDefaultInstance() : rpcInvocation_;
        }
      }
      /**
       * <code>.RpcInvocation rpc_invocation = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RpcInvocation, RpcInvocation.Builder, RpcInvocationOrBuilder>
          getRpcInvocationFieldBuilder() {
        if (rpcInvocationBuilder_ == null) {
          rpcInvocationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RpcInvocation, RpcInvocation.Builder, RpcInvocationOrBuilder>(
                  getRpcInvocation(),
                  getParentForChildren(),
                  isClean());
          rpcInvocation_ = null;
        }
        return rpcInvocationBuilder_;
      }

      private boolean isEvent_ ;
      /**
       * <code>bool is_event = 3;</code>
       * @return The isEvent.
       */
      @Override
      public boolean getIsEvent() {
        return isEvent_;
      }
      /**
       * <code>bool is_event = 3;</code>
       * @param value The isEvent to set.
       * @return This builder for chaining.
       */
      public Builder setIsEvent(boolean value) {

        isEvent_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_event = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsEvent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isEvent_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RpcRequest)
    }

    // @@protoc_insertion_point(class_scope:RpcRequest)
    private static final RpcRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RpcRequest();
    }

    public static RpcRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RpcRequest>
        PARSER = new com.google.protobuf.AbstractParser<RpcRequest>() {
      @Override
      public RpcRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RpcRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RpcRequest> getParserForType() {
      return PARSER;
    }

    @Override
    public RpcRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RpcInvocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RpcInvocation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string version = 1;</code>
     * @return The version.
     */
    String getVersion();
    /**
     * <code>string version = 1;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <code>string interface_name = 2;</code>
     * @return The interfaceName.
     */
    String getInterfaceName();
    /**
     * <code>string interface_name = 2;</code>
     * @return The bytes for interfaceName.
     */
    com.google.protobuf.ByteString
        getInterfaceNameBytes();

    /**
     * <code>string method_name = 3;</code>
     * @return The methodName.
     */
    String getMethodName();
    /**
     * <code>string method_name = 3;</code>
     * @return The bytes for methodName.
     */
    com.google.protobuf.ByteString
        getMethodNameBytes();

    /**
     * <code>repeated string parameter_type = 4;</code>
     * @return A list containing the parameterType.
     */
    java.util.List<String>
        getParameterTypeList();
    /**
     * <code>repeated string parameter_type = 4;</code>
     * @return The count of parameterType.
     */
    int getParameterTypeCount();
    /**
     * <code>repeated string parameter_type = 4;</code>
     * @param index The index of the element to return.
     * @return The parameterType at the given index.
     */
    String getParameterType(int index);
    /**
     * <code>repeated string parameter_type = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the parameterType at the given index.
     */
    com.google.protobuf.ByteString
        getParameterTypeBytes(int index);

    /**
     * <code>bytes arguments = 5;</code>
     * @return The arguments.
     */
    com.google.protobuf.ByteString getArguments();
  }
  /**
   * Protobuf type {@code RpcInvocation}
   */
  public static final class RpcInvocation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RpcInvocation)
      RpcInvocationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RpcInvocation.newBuilder() to construct.
    private RpcInvocation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RpcInvocation() {
      version_ = "";
      interfaceName_ = "";
      methodName_ = "";
      parameterType_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      arguments_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RpcInvocation();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RpcRequestProto.internal_static_RpcInvocation_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RpcRequestProto.internal_static_RpcInvocation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RpcInvocation.class, Builder.class);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile Object version_ = "";
    /**
     * <code>string version = 1;</code>
     * @return The version.
     */
    @Override
    public String getVersion() {
      Object ref = version_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <code>string version = 1;</code>
     * @return The bytes for version.
     */
    @Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      Object ref = version_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTERFACE_NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile Object interfaceName_ = "";
    /**
     * <code>string interface_name = 2;</code>
     * @return The interfaceName.
     */
    @Override
    public String getInterfaceName() {
      Object ref = interfaceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        interfaceName_ = s;
        return s;
      }
    }
    /**
     * <code>string interface_name = 2;</code>
     * @return The bytes for interfaceName.
     */
    @Override
    public com.google.protobuf.ByteString
        getInterfaceNameBytes() {
      Object ref = interfaceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        interfaceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METHOD_NAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile Object methodName_ = "";
    /**
     * <code>string method_name = 3;</code>
     * @return The methodName.
     */
    @Override
    public String getMethodName() {
      Object ref = methodName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        methodName_ = s;
        return s;
      }
    }
    /**
     * <code>string method_name = 3;</code>
     * @return The bytes for methodName.
     */
    @Override
    public com.google.protobuf.ByteString
        getMethodNameBytes() {
      Object ref = methodName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        methodName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARAMETER_TYPE_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList parameterType_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string parameter_type = 4;</code>
     * @return A list containing the parameterType.
     */
    public com.google.protobuf.ProtocolStringList
        getParameterTypeList() {
      return parameterType_;
    }
    /**
     * <code>repeated string parameter_type = 4;</code>
     * @return The count of parameterType.
     */
    public int getParameterTypeCount() {
      return parameterType_.size();
    }
    /**
     * <code>repeated string parameter_type = 4;</code>
     * @param index The index of the element to return.
     * @return The parameterType at the given index.
     */
    public String getParameterType(int index) {
      return parameterType_.get(index);
    }
    /**
     * <code>repeated string parameter_type = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the parameterType at the given index.
     */
    public com.google.protobuf.ByteString
        getParameterTypeBytes(int index) {
      return parameterType_.getByteString(index);
    }

    public static final int ARGUMENTS_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString arguments_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes arguments = 5;</code>
     * @return The arguments.
     */
    @Override
    public com.google.protobuf.ByteString getArguments() {
      return arguments_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, version_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(interfaceName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, interfaceName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(methodName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, methodName_);
      }
      for (int i = 0; i < parameterType_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, parameterType_.getRaw(i));
      }
      if (!arguments_.isEmpty()) {
        output.writeBytes(5, arguments_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, version_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(interfaceName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, interfaceName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(methodName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, methodName_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < parameterType_.size(); i++) {
          dataSize += computeStringSizeNoTag(parameterType_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getParameterTypeList().size();
      }
      if (!arguments_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, arguments_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RpcInvocation)) {
        return super.equals(obj);
      }
      RpcInvocation other = (RpcInvocation) obj;

      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getInterfaceName()
          .equals(other.getInterfaceName())) return false;
      if (!getMethodName()
          .equals(other.getMethodName())) return false;
      if (!getParameterTypeList()
          .equals(other.getParameterTypeList())) return false;
      if (!getArguments()
          .equals(other.getArguments())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + INTERFACE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getInterfaceName().hashCode();
      hash = (37 * hash) + METHOD_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getMethodName().hashCode();
      if (getParameterTypeCount() > 0) {
        hash = (37 * hash) + PARAMETER_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getParameterTypeList().hashCode();
      }
      hash = (37 * hash) + ARGUMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getArguments().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RpcInvocation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcInvocation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcInvocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcInvocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcInvocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcInvocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcInvocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RpcInvocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RpcInvocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RpcInvocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RpcInvocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RpcInvocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RpcInvocation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RpcInvocation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RpcInvocation)
        RpcInvocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RpcRequestProto.internal_static_RpcInvocation_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RpcRequestProto.internal_static_RpcInvocation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RpcInvocation.class, Builder.class);
      }

      // Construct using com.wheel.yun.proto.RpcRequestProto.RpcInvocation.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        version_ = "";
        interfaceName_ = "";
        methodName_ = "";
        parameterType_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        arguments_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RpcRequestProto.internal_static_RpcInvocation_descriptor;
      }

      @Override
      public RpcInvocation getDefaultInstanceForType() {
        return RpcInvocation.getDefaultInstance();
      }

      @Override
      public RpcInvocation build() {
        RpcInvocation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RpcInvocation buildPartial() {
        RpcInvocation result = new RpcInvocation(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(RpcInvocation result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.version_ = version_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.interfaceName_ = interfaceName_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.methodName_ = methodName_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          parameterType_.makeImmutable();
          result.parameterType_ = parameterType_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.arguments_ = arguments_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RpcInvocation) {
          return mergeFrom((RpcInvocation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RpcInvocation other) {
        if (other == RpcInvocation.getDefaultInstance()) return this;
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getInterfaceName().isEmpty()) {
          interfaceName_ = other.interfaceName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getMethodName().isEmpty()) {
          methodName_ = other.methodName_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.parameterType_.isEmpty()) {
          if (parameterType_.isEmpty()) {
            parameterType_ = other.parameterType_;
            bitField0_ |= 0x00000008;
          } else {
            ensureParameterTypeIsMutable();
            parameterType_.addAll(other.parameterType_);
          }
          onChanged();
        }
        if (other.getArguments() != com.google.protobuf.ByteString.EMPTY) {
          setArguments(other.getArguments());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                version_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                interfaceName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                methodName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                String s = input.readStringRequireUtf8();
                ensureParameterTypeIsMutable();
                parameterType_.add(s);
                break;
              } // case 34
              case 42: {
                arguments_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private Object version_ = "";
      /**
       * <code>string version = 1;</code>
       * @return The version.
       */
      public String getVersion() {
        Object ref = version_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string version = 1;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string version = 1;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        version_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        version_ = getDefaultInstance().getVersion();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string version = 1;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        version_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private Object interfaceName_ = "";
      /**
       * <code>string interface_name = 2;</code>
       * @return The interfaceName.
       */
      public String getInterfaceName() {
        Object ref = interfaceName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          interfaceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string interface_name = 2;</code>
       * @return The bytes for interfaceName.
       */
      public com.google.protobuf.ByteString
          getInterfaceNameBytes() {
        Object ref = interfaceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          interfaceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string interface_name = 2;</code>
       * @param value The interfaceName to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceName(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        interfaceName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string interface_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterfaceName() {
        interfaceName_ = getDefaultInstance().getInterfaceName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string interface_name = 2;</code>
       * @param value The bytes for interfaceName to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        interfaceName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private Object methodName_ = "";
      /**
       * <code>string method_name = 3;</code>
       * @return The methodName.
       */
      public String getMethodName() {
        Object ref = methodName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          methodName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string method_name = 3;</code>
       * @return The bytes for methodName.
       */
      public com.google.protobuf.ByteString
          getMethodNameBytes() {
        Object ref = methodName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          methodName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string method_name = 3;</code>
       * @param value The methodName to set.
       * @return This builder for chaining.
       */
      public Builder setMethodName(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        methodName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string method_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMethodName() {
        methodName_ = getDefaultInstance().getMethodName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string method_name = 3;</code>
       * @param value The bytes for methodName to set.
       * @return This builder for chaining.
       */
      public Builder setMethodNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        methodName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList parameterType_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureParameterTypeIsMutable() {
        if (!parameterType_.isModifiable()) {
          parameterType_ = new com.google.protobuf.LazyStringArrayList(parameterType_);
        }
        bitField0_ |= 0x00000008;
      }
      /**
       * <code>repeated string parameter_type = 4;</code>
       * @return A list containing the parameterType.
       */
      public com.google.protobuf.ProtocolStringList
          getParameterTypeList() {
        parameterType_.makeImmutable();
        return parameterType_;
      }
      /**
       * <code>repeated string parameter_type = 4;</code>
       * @return The count of parameterType.
       */
      public int getParameterTypeCount() {
        return parameterType_.size();
      }
      /**
       * <code>repeated string parameter_type = 4;</code>
       * @param index The index of the element to return.
       * @return The parameterType at the given index.
       */
      public String getParameterType(int index) {
        return parameterType_.get(index);
      }
      /**
       * <code>repeated string parameter_type = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the parameterType at the given index.
       */
      public com.google.protobuf.ByteString
          getParameterTypeBytes(int index) {
        return parameterType_.getByteString(index);
      }
      /**
       * <code>repeated string parameter_type = 4;</code>
       * @param index The index to set the value at.
       * @param value The parameterType to set.
       * @return This builder for chaining.
       */
      public Builder setParameterType(
          int index, String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureParameterTypeIsMutable();
        parameterType_.set(index, value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string parameter_type = 4;</code>
       * @param value The parameterType to add.
       * @return This builder for chaining.
       */
      public Builder addParameterType(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureParameterTypeIsMutable();
        parameterType_.add(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string parameter_type = 4;</code>
       * @param values The parameterType to add.
       * @return This builder for chaining.
       */
      public Builder addAllParameterType(
          Iterable<String> values) {
        ensureParameterTypeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, parameterType_);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string parameter_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearParameterType() {
        parameterType_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string parameter_type = 4;</code>
       * @param value The bytes of the parameterType to add.
       * @return This builder for chaining.
       */
      public Builder addParameterTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureParameterTypeIsMutable();
        parameterType_.add(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString arguments_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes arguments = 5;</code>
       * @return The arguments.
       */
      @Override
      public com.google.protobuf.ByteString getArguments() {
        return arguments_;
      }
      /**
       * <code>bytes arguments = 5;</code>
       * @param value The arguments to set.
       * @return This builder for chaining.
       */
      public Builder setArguments(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        arguments_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>bytes arguments = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearArguments() {
        bitField0_ = (bitField0_ & ~0x00000010);
        arguments_ = getDefaultInstance().getArguments();
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RpcInvocation)
    }

    // @@protoc_insertion_point(class_scope:RpcInvocation)
    private static final RpcInvocation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RpcInvocation();
    }

    public static RpcInvocation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RpcInvocation>
        PARSER = new com.google.protobuf.AbstractParser<RpcInvocation>() {
      @Override
      public RpcInvocation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RpcInvocation> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RpcInvocation> getParserForType() {
      return PARSER;
    }

    @Override
    public RpcInvocation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RpcRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RpcRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RpcInvocation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RpcInvocation_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\020RpcRequest.proto\"R\n\nRpcRequest\022\n\n\002id\030\001" +
      " \001(\003\022&\n\016rpc_invocation\030\002 \001(\0132\016.RpcInvoca" +
      "tion\022\020\n\010is_event\030\003 \001(\010\"x\n\rRpcInvocation\022" +
      "\017\n\007version\030\001 \001(\t\022\026\n\016interface_name\030\002 \001(\t" +
      "\022\023\n\013method_name\030\003 \001(\t\022\026\n\016parameter_type\030" +
      "\004 \003(\t\022\021\n\targuments\030\005 \001(\014B&\n\023com.wheel.yu" +
      "n.protoB\017RpcRequestProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_RpcRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_RpcRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RpcRequest_descriptor,
        new String[] { "Id", "RpcInvocation", "IsEvent", });
    internal_static_RpcInvocation_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_RpcInvocation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RpcInvocation_descriptor,
        new String[] { "Version", "InterfaceName", "MethodName", "ParameterType", "Arguments", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
